# -*- mode: ruby -*-
# vi: set ft=ruby :

# Require YAML module
require 'yaml'
# Read YAML file with box details
configs = YAML.load_file('configs.yaml') 

# box name into env var, same script can be used with different boxes. Defaults to win7-ie11.
# box_name = box_name = ENV['box_name'] != nil ? ENV['box_name'].strip : 'win7-ie11'
# box repo into env var, so private repos/cache can be used. Defaults to http://aka.ms

# Here we define variables in a boxes array
# These variables by themself do not do anyting, they are used in actual vagrant configuration later
# base boxes have port conflict amoung them, should be up by one at a time
boxes = [
  {:name=>"win10Base", :box_name=>'Microsoft/EdgeOnWindows10', :box_url=>'https://app.vagrantup.com/kganguly/boxes/MSEdge-Win10',
    :rdp_host_port=>30389, :selenium_host_port=>30444, :ssh_host_port=>30022, :winrm_https_port=>30986, :winrm_http_port=>30985},
  {:name=>"win10selenium01", :box_name=>'win10seleniumie', :box_url=>'file://./win10selenium.box',
    :rdp_host_port=>31389, :selenium_host_port=>31444, :ssh_host_port=>31022, :winrm_https_port=>31986, :winrm_http_port=>31985},
  {:name=>"win10selenium02", :box_name=>'win10seleniumie', :box_url=>'file://./win10selenium.box',
    :rdp_host_port=>32389, :selenium_host_port=>32444, :ssh_host_port=>32022, :winrm_https_port=>32986, :winrm_http_port=>32985},
  {:name=>"win10selenium03", :box_name=>'win10seleniumie', :box_url=>'file://./win10selenium.box',
    :rdp_host_port=>33389, :selenium_host_port=>33444, :ssh_host_port=>33022, :winrm_https_port=>33986, :winrm_http_port=>33985},
  {:name=>"win10selenium04", :box_name=>'win10seleniumie', :box_url=>'file://./win10selenium.box',
    :rdp_host_port=>34389, :selenium_host_port=>34444, :ssh_host_port=>34022, :winrm_https_port=>34986, :winrm_http_port=>34985},
  {:name=>"win10selenium05", :box_name=>'win10seleniumie', :box_url=>'file://./win10selenium.box',
    :rdp_host_port=>35389, :selenium_host_port=>35444, :ssh_host_port=>35022, :winrm_https_port=>35986, :winrm_http_port=>35985},
  {:name=>"win10selenium06", :box_name=>'win10seleniumie', :box_url=>'file://./win10selenium.box',
    :rdp_host_port=>36389, :selenium_host_port=>36444, :ssh_host_port=>36022, :winrm_https_port=>36986, :winrm_http_port=>36985},
  {:name=>"win10selenium07", :box_name=>'win10seleniumie', :box_url=>'file://./win10selenium.box',
    :rdp_host_port=>37389, :selenium_host_port=>37444, :ssh_host_port=>37022, :winrm_https_port=>37986, :winrm_http_port=>37985},
  {:name=>"win10selenium08", :box_name=>'win10seleniumie', :box_url=>'file://./win10selenium.box',
    :rdp_host_port=>38389, :selenium_host_port=>38444, :ssh_host_port=>38022, :winrm_https_port=>38986, :winrm_http_port=>38985},
  {:name=>"win10selenium09", :box_name=>'win10seleniumie', :box_url=>'file://./win10selenium.box',
    :rdp_host_port=>39389, :selenium_host_port=>39444, :ssh_host_port=>39022, :winrm_https_port=>39986, :winrm_http_port=>39985},
  {:name=>"win10selenium10", :box_name=>'win10seleniumie', :box_url=>'file://./win10selenium.box',
    :rdp_host_port=>40389, :selenium_host_port=>40444, :ssh_host_port=>40022, :winrm_https_port=>40986, :winrm_http_port=>40985},
  {:name=>"win10selenium11", :box_name=>'win10seleniumie', :box_url=>'file://./win10selenium.box',
    :rdp_host_port=>41389, :selenium_host_port=>41444, :ssh_host_port=>41022, :winrm_https_port=>41986, :winrm_http_port=>41985},
  {:name=>"win10selenium12", :box_name=>'win10seleniumie', :box_url=>'file://./win10selenium.box',
    :rdp_host_port=>42389, :selenium_host_port=>42444, :ssh_host_port=>42022, :winrm_https_port=>42986, :winrm_http_port=>42985},
  {:name=>"win10selenium13", :box_name=>'win10seleniumie', :box_url=>'file://./win10selenium.box',
    :rdp_host_port=>43389, :selenium_host_port=>43444, :ssh_host_port=>43022, :winrm_https_port=>43986, :winrm_http_port=>43985},
  {:name=>"win10selenium14", :box_name=>'win10seleniumie', :box_url=>'file://./win10selenium.box',
    :rdp_host_port=>44389, :selenium_host_port=>44444, :ssh_host_port=>44022, :winrm_https_port=>44986, :winrm_http_port=>44985},
  {:name=>"win10selenium15", :box_name=>'win10seleniumie', :box_url=>'file://./win10selenium.box',
    :rdp_host_port=>45389, :selenium_host_port=>45444, :ssh_host_port=>45022, :winrm_https_port=>45986, :winrm_http_port=>45985},
  {:name=>"win10selenium16", :box_name=>'win10seleniumie', :box_url=>'file://./win10selenium.box',
    :rdp_host_port=>46389, :selenium_host_port=>46444, :ssh_host_port=>46022, :winrm_https_port=>46986, :winrm_http_port=>46985},
]

Vagrant.configure("2") do |config|

  ##############################################################
  # Below we configure common stuff for all VMs in this folder #
  config.vm.boot_timeout = 500
  config.vm.box_check_update = false
  config.vm.synced_folder configs['sync_folder_Projects'], "C:\\Users\\#{configs['vagrant_user']}\\Projects", run: "always"

  # winrm config, uses modern.ie default user/password. If other credentials are used must be changed here
  config.ssh.username = "#{configs['vagrant_user']}"
  config.ssh.password = "#{configs['vagrant_password']}"
  config.winrm.username = "#{configs['vagrant_user']}"
  config.winrm.password = "#{configs['vagrant_password']}"
  config.vm.communicator = ENV['communicator'] || "winrm"
  config.ssh.sudo_command = ''
  config.ssh.insert_key = false
  config.winrm.basic_auth_only = true
  config.ssh.shell = 'sh -l'

  # for VirtualBox
  config.vm.provider "virtualbox" do |vb|
    # first setup requires gui to be enabled so scripts can be executed in virtualbox guest screen
    vb.linked_clone = true
    vb.gui = false
    vb.cpus = configs['cpus']
    vb.memory = configs['memory']
    vb.customize ["modifyvm", :id, "--vram", "128"]
    vb.customize ["modifyvm", :id, "--clipboard", "bidirectional"]
    vb.customize ["modifyvm", :id, "--graphicscontroller", "vboxvga"]
    vb.customize ["modifyvm", :id, "--ioapic", "on"]
    vb.customize ["modifyvm", :id, "--vrde", "on"]
    vb.customize ["modifyvm", :id, "--vtxux", "off"]
    vb.customize ["modifyvm", :id, "--vtxvpid", "off"]
    vb.customize ["modifyvm", :id, "--accelerate3d", "off"]
    vb.customize ["modifyvm", :id, "--boot1", "disk"]
    vb.customize ["modifyvm", :id, "--boot2", "dvd"]
    vb.customize ["modifyvm", :id, "--usb", "on"]
    vb.customize ["modifyvm", :id, "--usbehci", "off"]
    vb.customize ["modifyvm", :id, "--audio", "none"]
    vb.customize ["modifyvm", :id, "--cableconnected1", "on"]
    vb.customize ["guestproperty", "set", :id, "/VirtualBox/GuestAdd/VBoxService/ --timesync-set-threshold", 10000]
  end

  if Vagrant.has_plugin?("vagrant-vbguest")
      config.vbguest.auto_update = true
  end

  # set corporate proxy
  if Vagrant.has_plugin?("vagrant-proxyconf")
    config.proxy.http     = "http://#{configs['http_proxy_host_port']}"
    config.proxy.https    = "http://#{configs['http_proxy_host_port']}"
    config.proxy.no_proxy = "#{configs['no_proxy']}"
  end

  # Above we configure common stuff for all VMs in this folder #
  # ############################################################

  # Here we configure and provision stuff based on box name
  boxes.each do |box|
    config.vm.define box[:name] do |winbox|
      winbox.vm.guest = :windows
      winbox.vm.box = box[:box_name]
      winbox.vm.box_url = box[:box_url]
      winbox.vm.network :forwarded_port, guest: 22,   host: box[:ssh_host_port], id: "ssh", auto_correct: true
      winbox.vm.network :forwarded_port, guest: 5985, host: box[:winrm_http_port], id: "winrm", auto_correct: true
      winbox.vm.network :forwarded_port, guest: 3389, host: box[:rdp_host_port], id: "rdp3389", auto_correct: true
      winbox.vm.network :forwarded_port, guest: 4444, host: box[:selenium_host_port], id: "sel4444", auto_correct: true
      # set vm name in virtualbox
      winbox.vm.provider "virtualbox" do |vb|
        vb.name = box[:name]
      end
      if config.vm.communicator.to_s.include? "ssh"
        config.vm.provision "shell", binary: true, privileged: false, inline: <<-SHELL
          # winrm - Switch to private network
          /cygdrive/c/Windows/System32/WindowsPowerShell/v1.0/powershell.exe -InputFormat None -NoProfile -ExecutionPolicy Bypass -Command '$networkListManager = [Activator]::CreateInstance([Type]::GetTypeFromCLSID([Guid]"{DCB00C01-570F-4A9B-8D69-199FDBA5723B}")) ; $connections = $networkListManager.GetNetworkConnections() ; $connections | % {$_.GetNetwork().SetCategory(1)}'
        SHELL
      end
      if config.vm.communicator.to_s.include? "winrm"
        # really base on box name
        # puts "box name: " + winbox.vm.box.to_s
        # puts "vm name: " + box[:name].to_s
        if box[:name].to_s.include? "Base"
          winbox.vm.provision "setIEProxyCACerts.bat", type: :shell, path: "./setIEProxyCACerts.bat", args: [configs['http_proxy_host_port']], privileged: true
          winbox.vm.provision "setEnableRDP.bat", type: :shell, path: "./setEnableRDP.bat", privileged: true
          winbox.vm.provision "installJre8", type: :shell, inline: "choco install jre8 -PackageParameters \"/exclude:32\" -y", privileged: true
          winbox.vm.provision "installNodejsLTS", type: :shell, inline: "choco install nodejs-lts -y", privileged: true
          winbox.vm.provision "installGoogleChrome", type: :shell, inline: "choco install googlechrome -y", privileged: true
          winbox.vm.provision "installSDelete", type: :shell, inline: "choco install SDelete -y", privileged: true
          winbox.vm.provision "authorized_keys", type: :file,  source: '../global/authorized_keys', destination: "../.ssh/authorized_keys"
          winbox.vm.provision "selnium_config", type: :file,  source: '../global/selenium-standalone-config.js', destination: "selenium-standalone-config.js"
          winbox.vm.provision "keys_permission", type: :shell, inline: "cmd /c cacls %HOMEPATH%/.ssh/authorized_keys /e /c /d %username%", privileged: false
          winbox.vm.provision "installSeleniumStandalone.bat", type: :shell, path: "./installSeleniumStandalone.bat", privileged: false
          winbox.vm.provision "setAutoLogon.bat", type: :shell, path: "./setAutoLogon.bat", args: [configs['vagrant_user'],configs['vagrant_password']], privileged: true
          winbox.vm.provision "setUnblockApps.bat", type: :shell, path: "./setUnblockApps.bat", privileged: true
          winbox.vm.provision "installSeleniumDrivers.bat", type: :shell, path: "./installSeleniumDrivers.bat", privileged: false
        end
        winbox.vm.provision "runSeleniumStandalone.bat", type: :shell, path: "./runSeleniumStandalone.bat", powershell_args: "--–PassThru", powershell_elevated_interactive: true, privileged: true, run: "always"
      end
    end
  end
end
